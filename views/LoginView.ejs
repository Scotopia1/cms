<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Project Management CMS</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .form-container {
            max-width: 420px;
            margin-top: 8vh; /* Pushes the form down a bit */
        }
    </style>
</head>
<body class="bg-gradient-to-br from-slate-900 to-slate-700 min-h-screen flex flex-col items-center justify-center p-4">

<div class="form-container w-full bg-white p-8 rounded-xl shadow-2xl">
    <div class="text-center mb-8">
        <i class="fas fa-tasks text-5xl text-indigo-600 mb-3"></i>
        <h1 class="text-3xl font-bold text-gray-800">Welcome Back!</h1>
        <p class="text-gray-600">Sign in to manage your projects.</p>
    </div>

    <form id="loginForm" class="space-y-6">
        <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
            <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-envelope text-gray-400"></i>
                </div>
                <input type="email" id="email" name="email" placeholder="you@example.com" class="w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-150" required>
            </div>
        </div>

        <div>
            <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
            <div class="relative">
                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <i class="fas fa-lock text-gray-400"></i>
                </div>
                <input type="password" id="password" name="password" placeholder="••••••••" class="w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-150" required>
            </div>
        </div>

        <div class="flex items-center justify-between">
            <div class="flex items-center">
                <input id="remember-me" name="remember-me" type="checkbox" class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded">
                <label for="remember-me" class="ml-2 block text-sm text-gray-900">Remember me</label>
            </div>
            <div class="text-sm">
                <a href="#" class="font-medium text-indigo-600 hover:text-indigo-500">Forgot your password?</a>
            </div>
        </div>

        <div>
            <button type="submit" id="loginButton" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-150">
                <i class="fas fa-sign-in-alt mr-2"></i>Sign In
            </button>
        </div>
    </form>

    <div id="messageBox" class="mt-4 text-center text-sm"></div>

    <p class="mt-8 text-center text-sm text-gray-600">
        Don't have an account?
        <a href="/register-company.html" class="font-medium text-indigo-600 hover:text-indigo-500">Register your company</a>
    </p>
</div>

<script>
    const loginForm = document.getElementById('loginForm');
    const loginButton = document.getElementById('loginButton');
    const messageBox = document.getElementById('messageBox');

    loginForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        messageBox.textContent = '';
        messageBox.className = 'mt-4 text-center text-sm'; // Reset classes
        loginButton.disabled = true;
        loginButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Signing In...';

        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        try {
            // In a real application, you would make a POST request to your backend API
            // Example: const response = await fetch('/api/auth/login', {
            //     method: 'POST',
            //     headers: { 'Content-Type': 'application/json' },
            //     body: JSON.stringify({ email, password })
            // });

            // Simulating API call
            await new Promise(resolve => setTimeout(resolve, 1500));

            // ---- START MOCK API RESPONSE (Replace with actual fetch) ----
            let mockSuccess = true; // Change to false to test error
            let response;
            if (email === "admin@example.com" && password === "password") { // Dummy credentials
                response = {
                    ok: true,
                    json: async () => ({
                        success: true,
                        message: 'Login successful!',
                        token: 'dummy-auth-token-12345', // Backend would provide a real token
                        user: { name: 'Admin User', companyId: 1 }
                    })
                };
            } else {
                response = {
                    ok: false,
                    status: 401,
                    json: async () => ({
                        success: false,
                        message: 'Invalid email or password.'
                    })
                };
                mockSuccess = false;
            }
            // ---- END MOCK API RESPONSE ----

            const result = await response.json();

            if (response.ok && result.success) {
                messageBox.textContent = result.message;
                messageBox.classList.add('text-green-600');

                // Store the token (e.g., in localStorage or sessionStorage)
                // localStorage.setItem('authToken', result.token);
                // localStorage.setItem('userData', JSON.stringify(result.user)); // Store user info if needed

                // Redirect to dashboard or project view
                // window.location.href = '/dashboard.html'; // Or your main application page
                alert('Login successful! Token: ' + result.token + '. User: ' + result.user.name + '. Redirecting...');
                // For demonstration, we'll just log and alert.
                // In a real app, you would redirect: window.location.href = '/project-view.html'; (or your main dashboard)

            } else {
                messageBox.textContent = result.message || 'Login failed. Please try again.';
                messageBox.classList.add('text-red-600');
            }
        } catch (error) {
            console.error('Login error:', error);
            messageBox.textContent = 'An error occurred. Please try again later.';
            messageBox.classList.add('text-red-600');
        } finally {
            loginButton.disabled = false;
            loginButton.innerHTML = '<i class="fas fa-sign-in-alt mr-2"></i>Sign In';
        }
    });
</script>
</body>
</html>